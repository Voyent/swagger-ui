{
  "swagger": "2.0",
  "info": {
    "title": "Query REST API Documentation and Client",
    "description": "This is the REST API documentation for the Voyent Query Service.  It's also a dynamic client that you can use to exercise the API and try it out.",
    "version": "1.0.0"
  },
  "host": "dev.bridgeit.io",
  "schemes": [
    "http",
    "https"
  ],
  "basePath": "/query",
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "token-query": {
      "type": "apiKey",
      "name": "access_token",
      "in": "query"
    },
    "token-header": {
      "type": "apiKey",
      "name": "Bearer",
      "in": "header"
    }
  },
  "security": [
    {
      "token-query": []
    },
    {
      "token-header": []
    }
  ],
  "tags": [
    {
      "name": "Query",
      "description": "Individual Query operations."
    },
    {
      "name": "Queries",
      "description": "Group Query operations."
    },
    {
      "name": "Find",
      "description": "Queries that use the find() API."
    },
    {
      "name": "Aggregate",
      "description": "Queries that use the aggregate() API."
    },
    {
      "name": "Chain",
      "description": "Series of Queries and transformations."
    }
  ],
  "paths": {
    "/{accountId}/realms/{realmId}/queries/{findQueryId}": {
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "description": "The account under which one or more realms are managed.",
          "required": true,
          "type": "string"
        },
        {
          "name": "realmId",
          "in": "path",
          "description": "The realm under which this resource is managed.",
          "required": true,
          "type": "string"
        },
        {
          "name": "findQueryId",
          "in": "path",
          "description": "The unique id of a Query that uses the find()-style API.",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "summary": "Retrieve a Query",
        "description": "Retrieve a single specific Query associated with the id.",
        "tags": [
          "Find"
        ],
        "responses": {
          "200": {
            "description": "The a single Query that uses the find()-style API.",
            "schema": {
              "$ref": "#/definitions/FindQuery"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#Error"
            }
          }
        }
      },
      "post": {
        "summary": "Store a Query",
        "description": "Save a specific Query using the provided id as the key.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The find()-style query to be saved.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FindQuery"
            }
          }
        ],
        "tags": [
          "Find"
        ],
        "responses": {
          "201": {
            "description": "The URI representing the location of the resource.  The value is passed back in the Location: header as well as in the body of the response.",
            "schema": {
              "$ref": "definitions.json#/LocationURI"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#Error"
            }
          }
        }
      },
      "put": {
        "summary": "Update a Query",
        "description": "Update a specific Query using the provided id as the key.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The updated resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FindQuery"
            }
          }
        ],
        "tags": [
          "Find"
        ],
        "responses": {
          "204": {
            "description": "Returns status code indicating succes and no further content."
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove a Query",
        "description": "Delete a specific Query associated with the id.",
        "tags": [
          "Find"
        ],
        "responses": {
          "204": {
            "description": "Indicates that the resource was successfully deleted."
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#Error"
            }
          }
        }
      }
    },
    "/{accountId}/realms/{realmId}/queries/{aggregateQueryId}": {
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "description": "The account under which one or more realms are managed.",
          "required": true,
          "type": "string"
        },
        {
          "name": "realmId",
          "in": "path",
          "description": "The realm under which this resource is managed.",
          "required": true,
          "type": "string"
        },
        {
          "name": "aggregateQueryId",
          "in": "path",
          "description": "The unique id of a Query that uses the aggregate()-style API.",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "summary": "Retrieve a Query",
        "description": "Retrieve a single specific Query associated with the id.",
        "tags": [
          "Aggregate"
        ],
        "responses": {
          "200": {
            "description": "The a single Query that uses the aggregate()-style API.",
            "schema": {
              "$ref": "#/definitions/AggregateQuery"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#Error"
            }
          }
        }
      },
      "post": {
        "summary": "Store a Query",
        "description": "Save a specific Query using the provided id as the key.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The aggregate()-style query to be saved.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AggregateQuery"
            }
          }
        ],
        "tags": [
          "Aggregate"
        ],
        "responses": {
          "201": {
            "description": "The URI representing the location of the resource.  The value is passed back in the Location: header as well as in the body of the response.",
            "schema": {
              "$ref": "definitions.json#/LocationURI"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#Error"
            }
          }
        }
      },
      "put": {
        "summary": "Update a Query",
        "description": "Update a specific Query using the provided id as the key.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The updated resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AggregateQuery"
            }
          }
        ],
        "tags": [
          "Aggregate"
        ],
        "responses": {
          "204": {
            "description": "Returns status code indicating succes and no further content."
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove a Query",
        "description": "Delete a specific Query associated with the id.",
        "tags": [
          "Aggregate"
        ],
        "responses": {
          "204": {
            "description": "Indicates that the resource was successfully deleted."
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#Error"
            }
          }
        }
      }
    },
    "/{accountId}/realms/{realmId}/queries/{queryChainId}": {
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "description": "The account under which one or more realms are managed.",
          "required": true,
          "type": "string"
        },
        {
          "name": "realmId",
          "in": "path",
          "description": "The realm under which this resource is managed.",
          "required": true,
          "type": "string"
        },
        {
          "name": "queryChainId",
          "in": "path",
          "description": "The unique id of a Query Chain",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "summary": "Retrieve a Query Chain",
        "description": "Retrieve a single specific Query Chain associated with the id.",
        "tags": [
          "Chain"
        ],
        "responses": {
          "200": {
            "description": "A single Query Chain.",
            "schema": {
              "$ref": "#/definitions/QueryChain"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#Error"
            }
          }
        }
      },
      "post": {
        "summary": "Store a Query Chain",
        "description": "Save a specific Query Chain using the provided id as the key.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The Query Chain to be saved.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryChain"
            }
          }
        ],
        "tags": [
          "Chain"
        ],
        "responses": {
          "201": {
            "description": "The URI representing the location of the resource.  The value is passed back in the Location: header as well as in the body of the response.",
            "schema": {
              "$ref": "definitions.json#/LocationURI"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#Error"
            }
          }
        }
      },
      "put": {
        "summary": "Update a Query Chain",
        "description": "Update a specific Query Chain using the provided id as the key.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The updated resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryChain"
            }
          }
        ],
        "tags": [
          "Chain"
        ],
        "responses": {
          "204": {
            "description": "Returns status code indicating succes and no further content."
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove a Query Chain",
        "description": "Delete a specific Query Chain associated with the id.",
        "tags": [
          "Chain"
        ],
        "responses": {
          "204": {
            "description": "Indicates that the resource was successfully deleted."
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#Error"
            }
          }
        }
      }
    },
    "/{accountId}/realms/{realmId}/queries/{queryId}?exec=true": {
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "description": "The account under which one or more realms are managed.",
          "required": true,
          "type": "string"
        },
        {
          "name": "realmId",
          "in": "path",
          "description": "The realm under which this resource is managed.",
          "required": true,
          "type": "string"
        },
        {
          "name": "queryId",
          "in": "path",
          "description": "The unique id associated with this specific resource.",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "summary": "Execute a Query",
        "description": "Execute any kind of Query - Find, Aggregate, or Chain, using the provided id as the key.",
        "parameters": [
          {
            "name": "mode",
            "in": "query",
            "description": "Runs the Query in debug mode which returns additional information along with the results.",
            "required": false,
            "type": "string",
            "default": "debug"
          }
        ],
        "tags": ["Query"],
        "responses": {
          "200": {
            "description": "Returns the results from the executed query.",
            "schema": {
              "$ref": "#/definitions/QueryResults"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#Error"
            }
          }
        }
      }
    },
    "/{accountId}/realms/{realmId}/queries": {
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "description": "The account under which one or more realms are managed.",
          "required": true,
          "type": "string"
        },
        {
          "name": "realmId",
          "in": "path",
          "description": "The realm under which this resource is managed.",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "summary": "Retrieve one or more Queries",
        "description": "Retrieve one or more Queries.  Instead of specifying a specific id, the results are determined by optionally setting database query options.",
        "parameters": [
          {
            "name": "results",
            "in": "query",
            "description": "A flag indicating if you want \"all\" records (default) for this query or just \"one\". (all|one)",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "description": "A valid search query.  If omitted, the default query is used.",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Specify which fields to include/exclude in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "options",
            "in": "query",
            "description": "Other options for the query (e.g. paging and sorting).",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Queries"
        ],
        "responses": {
          "200": {
            "description": "All resources that match the query.",
            "schema": {
              "$ref": "#/definitions/Queries"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove one or more Queries",
        "description": "Deletes one or more Queries.  Instead of specifying a specific queryFindId, the results are determined by optionally setting database query options.",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "A valid search query.  If omitted, the default query is used.",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Queries"
        ],
        "responses": {
          "204": {
            "description": "Indicates that the resource was successfully deleted."
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#Error"
            }
          }
        }
      }
    },
    "/{accountId}/realms/{realmId}/queries/{resourceId}/permissions":  {
      "$ref": "permission-swagger.json" },
    "/{accountId}/realms/{realmId}/queries/permissions":  {
      "$ref": "permission-general-swagger.json" }
  },
  "definitions": {
    "Query": {
      "description": "A database Query described as a JSON document.",
      "type": "object"
    },
    "Queries": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Query"
      }
    },
    "QueryResults": {
      "type": "array",
      "items": {
        "type": "object"
      }
    },
    "FindQuery": {
      "description": "A Query that uses the find() API.",
      "type": "object"
    },
    "FindQueries": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/FindQuery"
      }
    },
    "AggregateQuery": {
      "description": "A Query that uses the aggregate() API.",
      "type": "object"
    },
    "AggregateaQueries": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AggregateQuery"
      }
    },
    "QueryChain": {
      "description": "A Query that uses multiple Queries and Transformers to get a single set of results.",
      "type": "object"
    },
    "QueryChains": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/QueryChain"
      }
    }
  }
}
