{
  "swagger": "2.0",
  "info": {
    "title": "Mailbox Service REST API Documentation and Client",
    "description": "This is the REST API documentation for the Voyent Mailbox Service. It's also a dynamic client that you can use to exercise the API",
    "version": "1.0.0"
  },
  "host": "dev.voyent.cloud",
  "securityDefinitions": {
    "token-query": {
      "type": "apiKey",
      "name": "access_token",
      "in": "query"
    },
    "token-header": {
      "type": "apiKey",
      "name": "Bearer",
      "in": "header"
    }
  },
  "security": [
    {
      "token-query": []
    },
    {
      "token-header": []
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "basePath": "/mailbox",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/{accountId}/realms/{realmId}/mailboxes": {
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "description": "The account under which one or more realms are managed.",
          "required": true,
          "type": "string"
        },
        {
          "name": "realmId",
          "in": "path",
          "description": "The realm under which this resource is managed.",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "summary": "Add data to user's mailboxes.",
        "description": "Add one or more messages to the mailbox of one or more users.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The message(s) to be saved.",
            "required": true,
            "schema": {
              "$ref": "MultiUserMessages"
            }
          }
        ],
        "tags": [
          "Messages"
        ],
        "responses": {
          "201": {
            "description": "The URIs representing the location of the resources. The first value is passed back in the Location: header and the entire list of resource URIs are in the body of the response.",
            "schema": {
              "$ref": "LocationURIS"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#/Error"
            }
          }
        }
      }
    },
    "/{accountId}/realms/{realmId}/mailboxes/{userId}/messages": {
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "description": "The account under which one or more realms are managed.",
          "required": true,
          "type": "string"
        },
        {
          "name": "realmId",
          "in": "path",
          "description": "The realm under which this resource is managed.",
          "required": true,
          "type": "string"
        },
        {
          "name": "userId",
          "in": "path",
          "description": "The user for which to create, get, or delete messages.",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "summary": "Add data to a user's mailbox.",
        "description": "Add one or more messages to the mailbox of a specific user.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The message(s) to be saved.",
            "required": true,
            "schema": {
              "$ref": "SingleUserMessages"
            }
          }
        ],
        "tags": [
          "Messages"
        ],
        "responses": {
          "201": {
            "description": "The URIs representing the location of the resources. The first value is passed back in the Location: header and the entire list of resource URIs are in the body of the response.",
            "schema": {
              "$ref": "LocationURIS"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#/Error"
            }
          }
        }
      },
      "get": {
        "summary": "Retrieve messages from a user's mailbox.",
        "description": "Retrieve messages for a specific user based on the results returned from query parameters.",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "A search query string for finding matching resources. Default {} (find all).",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Specify which fields to include/exclude in the results. Omit this parameter to return all fields in the matching documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "options",
            "in": "query",
            "description": "Additional options for the query results such as limit and sorting.",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Messages"
        ],
        "responses": {
          "200": {
            "description": "Returns an array of message records that match the query.",
            "schema": {
              "$ref": "SingleUserMessages"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove messages from a user's mailbox",
        "description": "Remove messages for a specific user based on the results returned from query parameters.",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "A search query string for finding matching resources. Default {} (find all).",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Specify which fields to include/exclude in the results. Omit this parameter to return all fields in the matching documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "options",
            "in": "query",
            "description": "Additional options for the query results such as limit and sorting.",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Messages"
        ],
        "responses": {
          "204": {
            "description": "Indicates that the resource(s) were successfully deleted."
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#/Error"
            }
          }
        }
      }
    },
    "/{accountId}/realms/{realmId}/mailboxes/{userId}/messages/type/{messageType}": {
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "description": "The account under which one or more realms are managed.",
          "required": true,
          "type": "string"
        },
        {
          "name": "realmId",
          "in": "path",
          "description": "The realm under which this resource is managed.",
          "required": true,
          "type": "string"
        },
        {
          "name": "userId",
          "in": "path",
          "description": "The user for which to get messages.",
          "required": true,
          "type": "string"
        },
        {
          "name": "messageType",
          "in": "path",
          "description": "The type of messages to get. Valid options are \"read\" or \"unread\".",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "summary": "Retrieve messages of a specific type from a user's mailbox.",
        "description": "Retrieve messages of a specific type for a specific user based on the results returned from query parameters.",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "A search query string for finding matching resources. Default {} (find all).",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Specify which fields to include/exclude in the results. Omit this parameter to return all fields in the matching documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "options",
            "in": "query",
            "description": "Additional options for the query results such as limit and sorting.",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Messages"
        ],
        "responses": {
          "200": {
            "description": "Returns an array of message records that match the type and query.",
            "schema": {
              "$ref": "SingleUserMessages"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove messages of a specific type from a user's mailbox.",
        "description": "Remove messages of a specific type for a specific user based on the results returned from query parameters.",
        "tags": [
          "Messages"
        ],
        "responses": {
          "204": {
            "description": "Indicates that the resource was successfully deleted."
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#/Error"
            }
          }
        }
      }
    },
    "/{accountId}/realms/{realmId}/mailboxes/{userId}/messages/{resourceId}": {
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "description": "The account under which one or more realms are managed.",
          "required": true,
          "type": "string"
        },
        {
          "name": "realmId",
          "in": "path",
          "description": "The realm under which this resource is managed.",
          "required": true,
          "type": "string"
        },
        {
          "name": "userId",
          "in": "path",
          "description": "The user for which to get or delete messages.",
          "required": true,
          "type": "string"
        },
        {
          "name": "resourceId",
          "in": "path",
          "description": "The unique id associated with this specific resource. In practice, this is the system-generated ID that uniquely identifies a message.",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "summary": "Retrieve a messages from a user's mailbox.",
        "description": "Retrieve a single specific message for a specific user's mailbox based on a resourceId.",
        "tags": [
          "Messages"
        ],
        "responses": {
          "200": {
            "description": "Returns a single, specific record uniquely identified by the resourceId.",
            "schema": {
              "$ref": "SingleUserMessage"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove a message from a user's mailbox",
        "description": "Remove a single specific message for a specific user's mailbox based on a resourceId.",
        "tags": [
          "Messages"
        ],
        "responses": {
          "204": {
            "description": "Indicates that the resource was successfully deleted."
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#/Error"
            }
          }
        }
      }
    },
    "/{accountId}/realms/{realmId}/config": {
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "description": "The account under which one or more realms are managed.",
          "required": true,
          "type": "string"
        },
        {
          "name": "realmId",
          "in": "path",
          "description": "The realm under which this resource is managed.",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "summary": "Retrieve the configuration options for this service.",
        "description": "Retrieve the configuration options for this service.",
        "tags": [
          "Config"
        ],
        "responses": {
          "200": {
            "description": "Returns an object containing the configuration parameters for this service.",
            "schema": {
              "$ref": "Configuration"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#/Error"
            }
          }
        }
      },
      "put": {
        "summary": "Update the configuration options for this service.",
        "description": "Update the configuration options for this service.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The configuration parameters to be updated.",
            "required": true,
            "schema": {
              "$ref": "Configuration"
            }
          }
        ],
        "tags": [
          "Config"
        ],
        "responses": {
          "204": {
            "description": "Returns status code indicating success and no further content."
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#/Error"
            }
          }
        }
      }
    },
    "/{accountId}/realms/{realmId}/mailboxes/{userId}/messages/permissions":  {  "$ref": "permission-general-swagger.json" },
    "/{accountId}/realms/{realmId}/mailboxes/{userId}/messages/{resourceId}/permissions":  {  "$ref": "permission-swagger.json" },
    "/{accountId}/realms/{realmId}/config/permissions":  {  "$ref": "permission-swagger.json" }
  },
  "definitions": {
    "MultiUserMessages": {
      "description": "Represents one or more messages meant for one or more users. Will accept an array of messages or a single message object.",
      "type": "array",
      "items": {
        "$ref": "MultiUserMessage"
      },
      "minItems":1
    },
    "MultiUserMessage": {
      "description": "Represents a message meant for one or more users.",
      "type": "object",
      "properties": {
        "for": {
          "type": "array",
          "description": "The list of users that the message is for (eg. ['user1','user2']",
          "required":true,
          "items": {
            "type": "string",
            "minLength":1
          },
          "minItems":1,
          "uniqueItems":true
        },
        "message": {
          "type": "object",
          "description": "The message contents. This object has no set definition.",
          "required":true,
          "minProperties":1
        }
      },
      "additionalProperties": false
    },
    "SingleUserMessages": {
      "description": "Represents one or more message meant for a specific user. Will accept an array of messages or a single message object.",
      "type": "array",
      "items": {
        "$ref": "SingleUserMessage"
      },
      "minItems":1
    },
    "SingleUserMessage": {
      "description": "Represents a message meant for a specific user. This object has no set definition.",
      "type": "object",
      "required":true,
      "minProperties":1
    },
    "Configuration": {
      "description": "Represents the available configuration options for this service. Properties can only be modified and must be of a specific type.",
      "type": "object",
      "properties": {
        "hoursAfterCreated": {
          "description": "The time in hours after a message is created that it will be automatically deleted, regardless of whether it has been read or not.",
          "type": "number",
          "default":168,
          "required":true
        },
        "hoursAfterRead": {
          "description": "The time in hours after a message is read that it will be automatically deleted.",
          "type": "number",
          "default":24,
          "required":true
        }
      },
      "additionalProperties": false
    },
    "Permission": {
      "owner": {
        "description": "The username of the creator of the resource",
        "type": "string"
      },
      "rights": {
        "description": "The rights description block",
        "$ref": "RightsBlock"
      }
    },
    "LocationURIS": {
      "description":"Represents the resource URI(s) of one or more resources.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "The list or resource URIs of the created resources. The URIs are returned in the same order that they were sent.",
          "type": "array"
        }
      }
    },
    "RightsBlock": {
      "owner": {
        "description": "The rights defined for the owner of the resource. Any of ['r', 'u', 'd', 'x', 'pr', 'pu']",
        "type": "string"
      },
      "realm": {
        "description": "Access rights granted to other users in the same realm. Any of ['r', 'u', 'd', 'x', 'pr', 'pu']",
        "type": "string"
      },
      "roles": {
        "description": "A set of access blocks granted to roles defined in the system",
        "type": "object"
      }
    }
  }
}
