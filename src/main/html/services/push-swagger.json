{
  "swagger": "2.0",
  "info": {
    "title": "Notification REST API Documentation and Client",
    "description": "This is the REST API documentation for the Voyent Notification Service.  It's also a dynamic client that you can use to exercise the API and try it out.",
    "version": "1.0.0"
  },
  "host": "dev.bridgeit.io",
  "schemes": [
    "http",
    "https"
  ],
  "basePath": "/push",
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "token-query": {
      "type": "apiKey",
      "name": "access_token",
      "in": "query"
    },
    "token-header": {
      "type": "apiKey",
      "name": "Bearer",
      "in": "header"
    }
  },
  "security": [
    {
      "token-query": []
    },
    {
      "token-header": []
    }
  ],
  "paths": {
    "/{accountId}/realms/{realmId}/group/{resourceId}": {
      "parameters": [
        {
          "name": "resourceId",
          "in": "path",
          "description": "The id of the group to receive the notification.",
          "required": true,
          "type": "string"
        },
        {
          "name": "realmId",
          "in": "path",
          "description": "The realm under which this resource is managed.",
          "required": true,
          "type": "string"
        },
        {
          "name": "accountId",
          "in": "path",
          "description": "The account under which one or more realms are managed.",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "summary": "Send notification to group.",
        "description": "Send a notification to the group identified by the resourceId.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The notification to send.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        ],
        "tags": [
          "Notification"
        ],
        "responses": {
          "204": {
            "description": "Notification successfully sent to group."
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#/Error"
            }
          }
        }
      }
    },
    "/{accountId}/realms/{realmId}/cloud/{resourceId}": {
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "description": "The account under which one or more realms are managed.",
          "required": true,
          "type": "string"
        },
        {
          "name": "realmId",
          "in": "path",
          "description": "The realm under which this resource is managed.",
          "required": true,
          "type": "string"
        },
        {
          "name": "resourceId",
          "in": "path",
          "description": "The unique id associated with this specific resource.",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "summary": "Retrieve a Cloud Configuration",
        "description": "Retrieve a single specific record associated with the resourceId.",
        "tags": [
          "Cloud"
        ],
        "responses": {
          "200": {
            "description": "Cloud Configuration successfully retrieved. Returns a single, specific record uniquely identified by the resourceId",
            "schema": {
              "$ref": "#/definitions/CloudConfiguration"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#/Error"
            }
          }
        }
      },
      "post": {
        "summary": "Store a Cloud Configuration",
        "description": "Save a specific Cloud Configuration using the provided resourceId as the key.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The resource to be saved.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloudConfiguration"
            }
          }
        ],
        "tags": [
          "Cloud"
        ],
        "responses": {
          "201": {
            "description": "Cloud Configuration successfully added. The URI representing the location of the resource.  The value is passed back in the Location: header as well as in the body of the response.",
            "schema": {
              "$ref": "definitions.json#/LocationURI"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove a Cloud Configuration",
        "description": "Delete a specific Cloud Configuration associated with the resourceId.",
        "tags": [
          "Cloud"
        ],
        "responses": {
          "204": {
            "description": "Cloud Configuration sucessfully deleted."
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Notification": {
      "type": "object",
      "title": "Push notification payload",
      "description": "The message structure for a push notification.",
      "properties": {
        "global": {
          "type": "object",
          "title": "Common message properties.",
          "description": "The global section holds properties common to all notification types.",
          "schema": {
            "$ref": "#/definitions/NotificationSettings"
          }
        },
        "cloud": {
          "type": "object",
          "title": "Native Cloud (Apple, Android) Settings Override",
          "description": "Used for optionally overriding global settings in native cloud (apns, c2dm) messages."
        },
        "email": {
          "type": "object",
          "title": "Email Settings Override",
          "description": "Used for optionally overriding global settings in email messages."
        },
        "sms": {
          "type": "object",
          "title": "SMS Settings Override",
          "description": "Used for optionally overriding settings in sms: messages."
        }
      },
      "required": [
        "global"
      ]
    },
    "NotificationSettings": {
      "type": "object",
      "title": "Notification Settings",
      "description": "The message structure for a push notification.",
      "properties": {
        "subject": {
          "type": "string",
          "title": "Notification Subject",
          "description": "The overall subject or title of the message.",
          "default": "The message subject goes here."
        },
        "details": {
          "type": "string",
          "title": "Notification Details",
          "description": "The main information of the message.",
          "default": "The message details go here."
        },
        "url": {
          "type": "string",
          "title": "Notification URL",
          "description": "The URL referring back to the relevant application for the notification.",
          "default": "http://voyent.com/myapp"
        },
        "icon": {
          "type": "string",
          "title": "Notification Icon URL",
          "description": "The URL to an icon that may be optionally displayed with the notification.",
          "default": "http://voyent.com/myapp"
        },
        "priority": {
          "type": "string",
          "title": "Notification Priority",
          "description": "An optional priority setting for the notification.",
          "default": "info"
        },
        "expire_time": {
          "type": "string",
          "title": "Notification Expiry.",
          "description": "An optional timeout value (in ms) for the notification to live.",
          "default": "259200"
        },
        "payload": {
          "type": "object",
          "title": "Notification Payload",
          "description": "An optional payload object containing anything else the notification should also include."
        }
      },
      "required": [
        "subject",
        "details",
        "url"
      ]
    },
    "CloudConfiguration": {
      "type": "object",
      "title": "Cloud push endpoint configuration.",
      "description": "A cloud push endpoint associated with a particular user.",
      "properties": {
        "username": {
          "type": "string",
          "description": "The username to associate with the cloud push endpoint.",
          "default": "someones.username"
        },
        "cloudPushURI": {
          "type": "string",
          "description": "The cloud push endpoint (e.g. mailto:, sms:, apns:, etc)",
          "default": "mailto:someones.username@somedomain.org"
        }
      },
      "required": [
        "username",
        "cloudPushURI"
      ]
    }
  }
}
