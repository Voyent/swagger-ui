{
  "swagger": 2.0,
  "info": {
    "title": "Locate REST API Documentation and Client",
    "description": "This is the REST API documentation for the BridgeIt Location Service.  It's also a dynamic client that you can use to exercise the API and try it out.",
    "version": "1.0.0"
  },
  "host": "dev.bridgeit.io",
  "schemes": [
    "http",
    "https"
  ],
  "basePath": "/locate",
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "token-query": {
      "type": "apiKey",
      "name": "access_token",
      "in": "query"
    },
    "token-header": {
      "type": "apiKey",
      "name": "Bearer",
      "in": "header"
    }
  },
  "security": [
    {
      "token-query": []
    },
    {
      "token-header": []
    }
  ],
  "paths": {
    "/{accountId}/realms/{realmId}/locations/{resourceId}": {
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "description": "The account under which one or more realms are managed.",
          "required": true,
          "type": "string"
        },
        {
          "name": "realmId",
          "in": "path",
          "description": "The realm under which this resource is managed.",
          "required": true,
          "type": "string"
        },
        {
          "name": "resourceId",
          "in": "path",
          "description": "The unique id associated with this specific resource.",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "summary": "Retrieve a Location",
        "description": "Retrieve a single specific record associated with the resourceId.",
        "parameters": [
        ],
        "tags": [
          "Location"
        ],
        "responses": {
          "200": {
            "description": "Returns a single, specific record uniquely identified by the resourceId",
            "schema": {
              "$ref": "#/definitions/Location"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#Error"
            }
          }
        }
      },
      "post": {
        "summary": "Store a Location",
        "description": "Save a specific Location using the provided resourceId as the key.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The resource to be saved.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Location"
            }
          }
        ],
        "tags": [
          "Location"
        ],
        "responses": {
          "201": {
            "description": "The URI representing the location of the resource.  The value is passed back in the Location: header as well as in the body of the response.",
            "schema": {
              "$ref": "definitions.json#/LocationURI"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove a Location",
        "description": "Delete a specific Location associated with the resourceId.",
        "parameters": [],
        "tags": [
          "Location"
        ],
        "responses": {
          "204": {
            "description": "Indicates that the resource was successfully deleted."
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#Error"
            }
          }
        }
      }
    },
    "/{accountId}/realms/{realmId}/locations": {
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "description": "The account under which one or more realms are managed.",
          "required": true,
          "type": "string"
        },
        {
          "name": "realmId",
          "in": "path",
          "description": "The realm under which this resource is managed.",
          "required": true,
          "type": "string"
        },
        {
          "name": "resourceId",
          "in": "path",
          "description": "The unique id associated with this specific resource.",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "summary": "Retrieve one or more Locations",
        "description": "Retrieve one or more Locations.  Instead of specifying a specific resourceId, the results are determined by optionally setting database query options.",
        "parameters": [
          {
            "name": "results",
            "in": "query",
            "description": "A flag indicating if you want \"all\" records (default) for this query or just \"one\". (all|one)",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "description": "A valid search query.  If omitted, the default query is used.",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Specify which fields to include/exclude in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "options",
            "in": "query",
            "description": "Other options for the query (e.g. paging and sorting).",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Locations"
        ],
        "responses": {
          "200": {
            "description": "All resources that match the query.",
            "schema": {
              "$ref": "#/definitions/Locations"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove one or more Locations",
        "description": "Deletes one or more Locations.  Instead of specifying a specific resourceId, the results are determined by optionally setting database query options.",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "A valid search query.  If omitted, the default query is used.",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Locations"
        ],
        "responses": {
          "204": {
            "description": "Indicates that the resource was successfully deleted."
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#Error"
            }
          }
        }
      }
    },
    "/{accountId}/realms/{realmId}/regions/{resourceId}": {
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "description": "The account under which one or more realms are managed.",
          "required": true,
          "type": "string"
        },
        {
          "name": "realmId",
          "in": "path",
          "description": "The realm under which this resource is managed.",
          "required": true,
          "type": "string"
        },
        {
          "name": "resourceId",
          "in": "path",
          "description": "The unique id associated with this specific resource.",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "summary": "Retrieve a Region",
        "description": "Retrieve a single specific record associated with the resourceId.",
        "parameters": [
        ],
        "tags": [
          "Region"
        ],
        "responses": {
          "200": {
            "description": "Returns a single, specific record uniquely identified by the resourceId.",
            "schema": {
              "$ref": "#/definitions/Region"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#Error"
            }
          }
        }
      },
      "post": {
        "summary": "Store a Region",
        "description": "Save a specific Region using the provided resourceId as the key.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The resource to be saved.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Region"
            }
          }
        ],
        "tags": [
          "Region"
        ],
        "responses": {
          "201": {
            "description": "The URI representing the location of the resource.  The value is passed back in the Location: header as well as in the body of the response.",
            "schema": {
              "$ref": "definitions.json#/LocationURI"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove a Region",
        "description": "Delete a specific Region associated with the resourceId.",
        "parameters": [
        ],
        "tags": [
          "Region"
        ],
        "responses": {
          "204": {
            "description": "Indicates that the resource was successfully deleted."
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#Error"
            }
          }
        }
      }
    },
    "/{accountId}/realms/{realmId}/regions": {
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "description": "The account under which one or more realms are managed.",
          "required": true,
          "type": "string"
        },
        {
          "name": "realmId",
          "in": "path",
          "description": "The realm under which this resource is managed.",
          "required": true,
          "type": "string"
        },
        {
          "name": "resourceId",
          "in": "path",
          "description": "The unique id associated with this specific resource.",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "summary": "Retrieve one or more Regions",
        "description": "Retrieve one or more Regions.  Instead of specifying a specific resourceId, the results are determined by optionally setting database query options.",
        "parameters": [
          {
            "name": "results",
            "in": "query",
            "description": "A flag indicating if you want \"all\" records (default) for this query or just \"one\". (all|one)",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "description": "A valid search query.  If omitted, the default query is used.",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Specify which fields to include/exclude in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "options",
            "in": "query",
            "description": "Other options for the query (e.g. paging and sorting).",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Regions"
        ],
        "responses": {
          "200": {
            "description": "All resources that match the query.",
            "schema": {
              "$ref": "#/definitions/Regions"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove one or more Regions",
        "description": "Deletes one or more Regions.  Instead of specifying a specific resourceId, the results are determined by optionally setting database query options.",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "A valid search query.  If omitted, the default query is used.",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Regions"
        ],
        "responses": {
          "204": {
            "description": "Indicates that the resource was successfully deleted."
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#Error"
            }
          }
        }
      }
    },
    "/{accountId}/realms/{realmId}/poi/{resourceId}": {
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "description": "The account under which one or more realms are managed.",
          "required": true,
          "type": "string"
        },
        {
          "name": "realmId",
          "in": "path",
          "description": "The realm under which this resource is managed.",
          "required": true,
          "type": "string"
        },
        {
          "name": "resourceId",
          "in": "path",
          "description": "The unique id associated with this specific resource.",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "summary": "Retrieve a Point of Interest (POI)",
        "description": "Retrieve a single specific record associated with the resourceId.",
        "parameters": [
        ],
        "tags": [
          "Point of Interest"
        ],
        "responses": {
          "200": {
            "description": "Returns a single, specific record uniquely identified by the resourceId.",
            "schema": {
              "$ref": "#/definitions/POI"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#Error"
            }
          }
        }
      },
      "post": {
        "summary": "Store Point of Interest (POI)",
        "description": "Save a specific Point of Interest (POI) using the provided resourceId as the key.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The resource to be saved.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/POI"
            }
          }
        ],
        "tags": [
          "Point of Interest"
        ],
        "responses": {
          "201": {
            "description": "The URI representing the location of the resource.  The value is passed back in the Location: header as well as in the body of the response.",
            "schema": {
              "$ref": "definitions.json#/LocationURI"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove a Point of Interest (POI)",
        "description": "Delete a specific POI associated with the resourceId.",
        "parameters": [
        ],
        "tags": [
          "Point of Interest"
        ],
        "responses": {
          "204": {
            "description": "Indicates that the resource was successfully deleted."
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#Error"
            }
          }
        }
      }
    },
    "/{accountId}/realms/{realmId}/poi": {
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "description": "The account under which one or more realms are managed.",
          "required": true,
          "type": "string"
        },
        {
          "name": "realmId",
          "in": "path",
          "description": "The realm under which this resource is managed.",
          "required": true,
          "type": "string"
        },
        {
          "name": "resourceId",
          "in": "path",
          "description": "The unique id associated with this specific resource.",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "summary": "Retrieve one or more Points of Interest (POI)",
        "description": "Retrieve one or more Points of Interest (POI).  Instead of specifying a specific resource id, the results are determined by optionally setting database query options.",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "A valid search query.  If omitted, the default query is used.",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Specify which fields to include/exclude in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "options",
            "in": "query",
            "description": "Other options for the query (e.g. paging and sorting).",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Points of Interest"
        ],
        "responses": {
          "200": {
            "description": "All Points of Interest (POI) that match the query.",
            "schema": {
              "$ref": "#/definitions/POIs"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove one or more Points of Interest (POI)",
        "description": "Delete one or more Points of Interest (POI).  Instead of specifying a specific resource id, the results are determined by optionally setting database query options.",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "A valid search query.  If omitted, the default query is used.",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Points of Interest"
        ],
        "responses": {
          "204": {
            "description": "Indicates that the POI was successfully deleted."
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "definitions.json#Error"
            }
          }
        }
      }
    },
    "/{accountId}/realms/{realmId}/locations/{resourceId}/permissions": {
      "$ref": "permission-swagger.json"
    },
    "/{accountId}/realms/{realmId}/poi/{resourceId}/permissions": {
      "$ref": "permission-swagger.json"
    },
    "/{accountId}/realms/{realmId}/regions/{resourceId}/permissions": {
      "$ref": "permission-swagger.json"
    },
    "/{accountId}/realms/{realmId}/locations/permissions": {
      "$ref": "permission-general-swagger.json"
    },
    "/{accountId}/realms/{realmId}/poi/permissions": {
      "$ref": "permission-general-swagger.json"
    },
    "/{accountId}/realms/{realmId}/regions/permissions": {
      "$ref": "permission-general-swagger.json"
    }
  },
  "definitions": {
    "Position": {
      "description": "A single geographic point",
      "type": "array",
      "minItems": 2,
      "items": [
        {
          "description": "Longitude (-180 to 180)",
          "type": "number",
          "minimum": -180,
          "maximum": 180
        },
        {
          "description": "Latitude (-90 to 90)",
          "type": "number",
          "minimum": -90,
          "maximum": 90
        }
      ]
    },
    "PositionArray": {
      "description": "An array of Positions",
      "type": "array",
      "items": {
        "$ref": "#/definitions/Position"
      }
    },
    "LinearRing": {
      "description": "A single geographic point",
      "minItems": 4,
      "allOf": [
        {
          "$ref": "#/definitions/PositionArray"
        }
      ]
    },
    "Polygon": {
      "description": "An array of LinearRings",
      "type": "array",
      "items": {
        "$ref": "#/definitions/LinearRing"
      }
    },
    "Location": {
      "description": "A Location represents a users location information (longitude, latitude) in GeoJSON format. It also includes related metadata and optional, custom properties.",
      "type": "object",
      "required": ["location"],
      "properties": {
        "label": {
          "description": "Human friendly name for this resource.",
          "type": "string"
        },
        "location": {
          "description": "The GeoJSON record for this resource.",
          "type": "object",
          "properties": {
            "geometry": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": ["Point"],
                  "default": "Point"
                },
                "coordinates": {
                  "$ref": "#/definitions/Position"
                }
              }
            },
            "properties": {
              "type": "object",
              "description": "Optional, additional properties of the resource.",
              "properties": {
                "altitude": {
                  "description": "The altitude of the Location in meters.",
                  "type": "number"
                }
              }
            }
          }
        }
      }
    },
    "Locations": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Location"
      }
    },
    "POI": {
      "description": "A point of interest (POI). Includes meta data and a single GeoJSON Point.",
      "type": "object",
      "required": ["location"],
      "properties": {
        "label": {
          "description": "Human friendly name for this resource.",
          "type": "string"
        },
        "location": {
          "description": "The GeoJSON record for this resource.",
          "type": "object",
          "properties": {
            "geometry": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": ["Point"],
                  "default": "Point"
                },
                "coordinates": {
                  "$ref": "#/definitions/Position"
                }
              }
            },
            "properties": {
              "type": "object",
              "description": "Optional, additional properties of the resource.",
              "properties": {
                "altitude": {
                  "description": "The altitude of the POI in meters.",
                  "type": "number"
                }
              }
            }
          }
        }
      }
    },
    "POIs": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/POI"
      }
    },
    "Region": {
      "description": "A Region represents a geographic area in GeoJSON format - a bounding polygon that consists of a closed set of geographic (longitude, latitude) points. It also includes related metadata and optional, custom properties.",
      "type": "object",
      "required": ["location"],
      "properties": {
        "label": {
          "description": "Optional, human friendly name for this resource.",
          "type": "string"
        },
        "location": {
          "description": "The GeoJSON record for this resource.",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["Feature"],
              "default": "Feature",
              "description": "Part of the GeoJSON spec (inserted if not provided)."
            },
            "geometry": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": ["Polygon"],
                  "default": "Polygon"
                },
                "coordinates": {
                  "$ref": "#/definitions/Polygon"
                }
              }
            },
            "properties": {
              "type": "object",
              "description": "Optional, additional properties of the resource.",
              "properties": {
                "tags": {
                  "description": "An array of strings to help group and classify the Region.",
                  "type": "array",
                  "minItems": 0,
                  "items": {
                    "type": "string"
                  }
                },
                "altitude": {
                  "description": "The altitude of the Region in meters.",
                  "type": "number"
                }
              }
            }
          }
        }
      }
    },
    "Regions": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Region"
      }
    }
  }
}