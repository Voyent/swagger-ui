{
    "swagger": 2.0,
    "info": {
        "description": "This is the REST API documentation for the BridgeIt User Service.  It's also a dynamic client that you can use to exercise the API and try it out.",
        "license": {
            "name": "ICESOFT COMMERCIAL SOURCE CODE LICENSE V 1.1",
            "url": "http://www.icesoft.com/license/commercial-source-v1.1.html"
        },
        "title": "User Service",
        "version": "1.0.0"
    },
    "schemes": [
        "http",
        "https"
    ],
    "host": "dev.bridgeit.io",
    "basePath": "/context",
    "produces": [
        "application/json"
    ],
    "paths": {
        "/{accountId}/realms/{realmId}/users/{username}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Retrieve the entire record for the user.",
                "description": "Get the amalgamated realm and app information as well as the current state for the specified user.",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The account under which the realm and the resource is managed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "realmId",
                        "in": "path",
                        "description": "The realm under which this resource is managed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The unique id associated with this specific resource.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a single, specific record uniquely identified by the username",
                        "schema": {
                            "$ref": "User"
                        }
                    },
                    "400": {
                        "description": "Invalid request. Parameters may be missing or incorrect.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "401": {
                        "description": "Unable to perform operation due to invalid permission.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "404": {
                        "description": "Could not find the resource associated with this id.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create a new user.",
                "description": "Creates a new user.  An error occurs if the user already exists.",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The account under which the realm and the resource is managed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "realmId",
                        "in": "path",
                        "description": "The realm under which this resource is managed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The unique id associated with this specific resource.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Returns a unique resourceId URI in the Location: header as well as in the body of the response.",
                        "schema": {
                            "$ref": "User"
                        }
                    },
                    "400": {
                        "description": "Invalid request. Parameters may be missing or incorrect.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "401": {
                        "description": "Unable to perform operation due to invalid permission.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "404": {
                        "description": "Could not find the resource associated with this id.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Remove the user.",
                "description": "Deletes the current record for the specified user.",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The account under which the realm and the resource is managed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "realmId",
                        "in": "path",
                        "description": "The realm under which this resource is managed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The unique id associated with this specific resource.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "If removal is successful, nothing is returned.",
                        "schema": {
                            "$ref": "User"
                        }
                    },
                    "400": {
                        "description": "Invalid request. Parameters may be missing or incorrect.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "401": {
                        "description": "Unable to perform operation due to invalid permission.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "404": {
                        "description": "Could not find the resource associated with this id.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "Error"
                        }
                    }
                }
            }
        },
        "/{accountId}/realms/{realmId}/users/{username}/info": {
            "get": {
                "tags": [
                    "User Info"
                ],
                "summary": "Retrieve all info for the specific user",
                "description": "Get the amalgamated (realm and app) info for the specified user.",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The account under which the realm and the resource is managed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "realmId",
                        "in": "path",
                        "description": "The realm under which this resource is managed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The unique id associated with this specific resource.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a single, specific record uniquely identified by the username",
                        "schema": {
                            "$ref": "Info"
                        }
                    },
                    "400": {
                        "description": "Invalid request. Parameters may be missing or incorrect.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "401": {
                        "description": "Unable to perform operation due to invalid permission.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "404": {
                        "description": "Could not find the resource associated with this id.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User Info"
                ],
                "summary": "Update the application user info.",
                "description": "Create or replace a user's application specific info.  Realm info cannot be modified through this API.",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The account under which the realm and the resource is managed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "realmId",
                        "in": "path",
                        "description": "The realm under which this resource is managed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The unique id associated with this specific resource.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Returns a unique username URI in the Location: header as well as in the body of the response.",
                        "schema": {
                            "$ref": "Info"
                        }
                    },
                    "400": {
                        "description": "Invalid request. Parameters may be missing or incorrect.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "401": {
                        "description": "Unable to perform operation due to invalid permission.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "404": {
                        "description": "Could not find the resource associated with this id.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "User Info"
                ],
                "summary": "Clears the user's info.",
                "description": "Removes all application-specific info for this user.  Realm info cannot be modified with this API.",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The account under which the realm and the resource is managed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "realmId",
                        "in": "path",
                        "description": "The realm under which this resource is managed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The unique id associated with this specific resource.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "If removal is successful, nothing is returned.",
                        "schema": {
                            "$ref": "Info"
                        }
                    },
                    "400": {
                        "description": "Invalid request. Parameters may be missing or incorrect.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "401": {
                        "description": "Unable to perform operation due to invalid permission.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "404": {
                        "description": "Could not find the resource associated with this id.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "Error"
                        }
                    }
                }
            }
        },
        "/{accountId}/realms/{realmId}/users/{username}/state": {
            "get": {
                "tags": [
                    "User State"
                ],
                "summary": "Get user's application state.",
                "description": "Get the current application state for this specific user.",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The account under which the realm and the resource is managed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "realmId",
                        "in": "path",
                        "description": "The realm under which this resource is managed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The unique id associated with this specific resource.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a single, specific record uniquely identified by the username",
                        "schema": {
                            "$ref": "State"
                        }
                    },
                    "400": {
                        "description": "Invalid request. Parameters may be missing or incorrect.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "401": {
                        "description": "Unable to perform operation due to invalid permission.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "404": {
                        "description": "Could not find the resource associated with this id.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User State"
                ],
                "summary": "Update the application state for this user.",
                "description": "Create or replace a user's application state.",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The account under which the realm and the resource is managed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "realmId",
                        "in": "path",
                        "description": "The realm under which this resource is managed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The unique id associated with this specific resource.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Returns a unique resourceId URI in the Location: header as well as in the body of the response.",
                        "schema": {
                            "$ref": "State"
                        }
                    },
                    "400": {
                        "description": "Invalid request. Parameters may be missing or incorrect.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "401": {
                        "description": "Unable to perform operation due to invalid permission.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "404": {
                        "description": "Could not find the resource associated with this id.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "User State"
                ],
                "summary": "Clears the user's application state.",
                "description": "Removes all application state for the specified user.",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The account under which the realm and the resource is managed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "realmId",
                        "in": "path",
                        "description": "The realm under which this resource is managed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The unique id associated with this specific resource.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "If removal is successful, nothing is returned.",
                        "schema": {
                            "$ref": "State"
                        }
                    },
                    "400": {
                        "description": "Invalid request. Parameters may be missing or incorrect.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "401": {
                        "description": "Unable to perform operation due to invalid permission.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "404": {
                        "description": "Could not find the resource associated with this id.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "Error"
                        }
                    }
                }
            }
        },
        "/{accountId}/realms/{realmId}/users/{username}/updates": {
            "get": {
                "tags": [
                    "User Updates"
                ],
                "summary": "Get all user updates.",
                "description": "Retrieves all the unexpired updates for the specified user.",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The account under which the realm and the resource is managed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "realmId",
                        "in": "path",
                        "description": "The realm under which this resource is managed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The unique id associated with this specific resource.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a single, specific record uniquely identified by the username.",
                        "schema": {
                            "$ref": "Update"
                        }
                    },
                    "400": {
                        "description": "Invalid request. Parameters may be missing or incorrect.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "401": {
                        "description": "Unable to perform operation due to invalid permission.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "404": {
                        "description": "Could not find the resource associated with this id.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User Updates"
                ],
                "summary": "Create a new update.",
                "description": "Adds a new update for this user.",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The account under which the realm and the resource is managed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "realmId",
                        "in": "path",
                        "description": "The realm under which this resource is managed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The unique id associated with this specific resource.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Returns a unique resourceId URI in the Location: header as well as in the body of the response.",
                        "schema": {
                            "$ref": "Update"
                        }
                    },
                    "400": {
                        "description": "Invalid request. Parameters may be missing or incorrect.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "401": {
                        "description": "Unable to perform operation due to invalid permission.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "404": {
                        "description": "Could not find the resource associated with this id.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "User Updates"
                ],
                "summary": "Remove the updates for the user.",
                "description": "Deletes updates for the specified user.",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The account under which the realm and the resource is managed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "realmId",
                        "in": "path",
                        "description": "The realm under which this resource is managed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The unique id associated with this specific resource.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "If removal is successful, nothing is returned."
                    },
                    "400": {
                        "description": "Invalid request. Parameters may be missing or incorrect.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "401": {
                        "description": "Unable to perform operation due to invalid permission.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "404": {
                        "description": "Could not find the resource associated with this id.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "schema": {
                            "$ref": "Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "User": {
            "description": "A user represents the concept of a single user related to your application environment. It's has a combination of static information from the realm account (e.g. email) as well as any additional custom information that the developer wants to add (e.g. birthday).  In addition, it stores information related to the user's current application state (e.g. ticketsPurchased).",
            "type": "object",
            "properties": {
                "info": {
                    "$ref": "Info"
                },
                "state": {
                    "$ref": "State"
                }
            }
        },
        "Info": {
            "description": "Info is general, static information related to a user.  Information about a user that is stored in the Realm would included things like email address.  But application developers can also add their own, custom information here for things not covered in the realm data.  For example, you could track the employee number or birthdays.",
            "type": "object"
        },
        "State": {
            "description": "Compared to Info, the State refers to more dynamic or transient information related to the user's current state in the application.  Here the developer could store things like how many tickets they've purchased or the last time they logged in.",
            "type": "object"
        },
        "Update": {
            "description": "Update refers to the information stored for the user based on changes in the state of the application.  This is typically done dynamically via Contexts.  A collection of pending updates can be retrieved by the client and used to update the UI to reflect the latest state of the application.",
            "type": "object",
            "properties": {
                "username": {
                    "description": "The user in this realm that the update applies to.",
                    "type": "string",
                    "required": true
                },
                "tags": {
                    "description": "An array of strings used to categorize the updates.",
                    "items": {
                        "description": "A category to help identify this update or set of updates.",
                        "type": "string"
                    }
                },
                "timeAdded": {
                    "description": "The date and time that this update was added.",
                    "type": "string",
                    "format": "date-time",
                    "required": true
                },
                "timeRead": {
                    "description": "The date and time that this update read by the user.",
                    "type": "string",
                    "format": "date-time"
                },
                "timeAcknowledged": {
                    "description": "The date and time that this update was acknowledged as being read.",
                    "type": "string",
                    "format": "date-time"
                },
                "expiryStrategy": {
                    "description": "A strategy for determining when updates should be considered expired and cleaned up.",
                    "type": "object"
                },
                "data": {
                    "description": "The data object representing the actual update.  This can be in any format the app developer requires.",
                    "type": "object"

                }

            }

        }

    }

}